# Generated by Django 5.2.5 on 2025-08-31 18:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Molecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smiles', models.TextField(unique=True)),
                ('inchi', models.TextField(unique=True)),
                ('inchikey', models.CharField(max_length=27, unique=True)),
                ('common_name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MolecularFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('members', models.ManyToManyField(related_name='families', to='cadmaflow_models.molecule')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(max_length=100)),
                ('provider_kind', models.CharField(choices=[('MOLECULE_SET', 'Molecule Set'), ('PROPERTIES_SET', 'Properties Set')], max_length=20)),
                ('provider_version', models.CharField(blank=True, max_length=50)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('RUNNING', 'Ejecutando'), ('COMPLETED', 'Completado'), ('FAILED', 'Fallido'), ('DATA_FROZEN', 'Datos Congelados')], default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['provider_name', 'provider_kind'], name='cadmaflow_m_provide_165224_idx'), models.Index(fields=['status'], name='cadmaflow_m_status_503cc8_idx')],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('branch_label', models.CharField(blank=True, help_text='Etiqueta legible de la rama (p.ej. v2-high-temp)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_branches', to='cadmaflow_models.workflow')),
                ('root_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='descendants', to='cadmaflow_models.workflow')),
            ],
            options={
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('branch_reason', models.TextField(blank=True)),
                ('data_selection_preferences', models.JSONField(default=dict, help_text='Preferencias de selección de datos para esta rama')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='cadmaflow_models.workflowbranch')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='cadmaflow_models.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('family_data_config', models.JSONField(default=dict, help_text='Configuración de métodos de obtención de datos por familia')),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('RUNNING', 'Ejecutando'), ('COMPLETED', 'Completado'), ('FAILED', 'Fallido'), ('DATA_FROZEN', 'Datos Congelados')], default='PENDING', max_length=20)),
                ('current_step', models.CharField(blank=True, max_length=100)),
                ('execution_results', models.JSONField(blank=True, default=dict)),
                ('execution_metrics', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='cadmaflow_models.workflowbranch')),
                ('families', models.ManyToManyField(related_name='executions', to='cadmaflow_models.molecularfamily')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='cadmaflow_models.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='StepExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_id', models.CharField(max_length=100)),
                ('step_name', models.CharField(max_length=200)),
                ('order', models.IntegerField()),
                ('input_data_snapshot', models.JSONField(default=dict, help_text='Snapshot de los datos de entrada utilizados en este paso')),
                ('data_retrieval_methods', models.JSONField(default=dict, help_text='Métodos de obtención utilizados para cada tipo de dato')),
                ('results', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('RUNNING', 'Ejecutando'), ('COMPLETED', 'Completado'), ('FAILED', 'Fallido'), ('DATA_FROZEN', 'Datos Congelados')], default='PENDING', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('data_frozen_at', models.DateTimeField(blank=True, null=True)),
                ('input_signature', models.CharField(blank=True, help_text='SHA256 de entradas + parámetros + providers', max_length=64)),
                ('input_properties', models.JSONField(blank=True, default=list)),
                ('providers_used', models.JSONField(blank=True, default=list)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_executions', to='cadmaflow_models.workflowexecution')),
            ],
            options={
                'ordering': ['order', 'started_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(help_text='Tipo lógico del evento (STEP_COMPLETED, FORK, etc.)', max_length=50)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='cadmaflow_models.workflowexecution')),
            ],
            options={
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['execution', 'event_type'], name='cadmaflow_m_executi_edc3cb_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(max_length=100)),
                ('data_class', models.CharField(max_length=150)),
                ('data_id', models.UUIDField()),
                ('selected_at', models.DateTimeField(auto_now_add=True)),
                ('selected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('molecule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_selections', to='cadmaflow_models.molecule')),
                ('provider_execution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cadmaflow_models.providerexecution')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_selections', to='cadmaflow_models.workflowbranch')),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_selections', to='cadmaflow_models.workflowexecution')),
            ],
            options={
                'indexes': [models.Index(fields=['molecule', 'property_name'], name='cadmaflow_m_molecul_4c6c3e_idx'), models.Index(fields=['property_name', 'provider_execution'], name='cadmaflow_m_propert_dfb3e5_idx')],
                'unique_together': {('execution', 'branch', 'molecule', 'property_name')},
            },
        ),
    ]
