name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DJANGO_ENV: ci
      DJANGO_SECRET_KEY: ci-secret
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ci_user
          POSTGRES_PASSWORD: ci_pass
          POSTGRES_DB: ci_db
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U ci_user" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install --no-interaction --no-root
      - name: Run tests
        run: |
          poetry run pytest
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
        with:
          args: >-
            -Dsonar.projectKey=cadma-flow
            -Dsonar.organization=${SONAR_ORG}
            -Dsonar.coverage.exclusions=tests/**
  quality-gate:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >-
            sonar.qualitygate.wait=true
