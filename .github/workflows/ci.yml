name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DJANGO_ENV: ci

      DJANGO_SECRET_KEY: ci-secret
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ci_user
          POSTGRES_PASSWORD: ci_pass
          POSTGRES_DB: ci_db
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U ci_user" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Crear archivo .env
        run: |
          cat > .env <<'EOF'
          DJANGO_ENV=ci
          DJANGO_SECRET_KEY=ci-secret
          DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost
          DJANGO_DEBUG=False
          EOF
          echo ".env creado:" && cat .env
      - name: Instalar dependencias
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Migraciones (opcional para health)
        run: |
          export $(grep -v '^#' .env | xargs)
          python manage.py migrate --noinput
      - name: Levantar servidor y probar /health
        run: |
          export $(grep -v '^#' .env | xargs)
          python manage.py runserver 0.0.0.0:8000 &
          SERVER_PID=$!
          echo "PID=${SERVER_PID}" > server_pid.txt
          echo "Esperando a que /health responda..."
          for i in {1..20}; do
            sleep 2
            if curl -fsS http://127.0.0.1:8000/health/ | grep '"status":"ok"' >/dev/null; then
              echo "Health OK"
              break
            fi
            echo "Intento $i: aún no responde"
            if [ $i -eq 20 ]; then
              echo "El endpoint /health no respondió a tiempo" >&2
              kill $SERVER_PID || true
              exit 1
            fi
          done
          kill $SERVER_PID || true
      # Paso original de instalación (reemplazado por 'Instalar dependencias')
      # Ejecutar pruebas después de validar que el backend levanta
      - name: Tests con cobertura (fail-under 85%)
        run: |
          pytest --cov=cadmaflow --cov-report=xml --cov-report=term-missing --cov-fail-under=85